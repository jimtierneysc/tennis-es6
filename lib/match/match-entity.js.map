{"version":3,"sources":["../../src/match/match-entity.js"],"names":["_","ScoreComponent","owner","value","_childList","undefined","_owner","_value","addChild","member","defValue","initValue","component","childRemoved","childAdded","isEqual","ScoreComponentList","constructChildren","forEach","i","factory","indexOf","splice","push","item","last","removeChild","arg","result","isEqualValue","entity","count","removeLast","length","len","SetGame","winner","opponentId","changeWinner","winnerId","finished","matchTiebreak","setTiebreak","SetGames","MatchSet","_games","initArray","scores","changeScores","MatchSets","Player","id","_nextId","name","PlayerList","Players","lastId","_list","PlayerRef","PlayerRefList","PlayerRefs","_players","players","clear","Servers","Opponent","Opponents","_first","initObj","_second","Match","_sets","_servers","_opponents","sets","started","warmingUp","_commandStrategy"],"mappings":"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","file":"match-entity.js","sourcesContent":["/**\n * Classes to record tennis match score\n */\nimport * as _ from 'lodash'\nimport {matchObservable} from './match-observable'\n\n// TODO: Parent vs. Owner\nclass ScoreComponent {\n    constructor(owner, value) {\n        this._childList = undefined;\n        this._owner = owner;\n        this._value = value || {};\n        if (owner) {\n            this._owner.addChild(this);\n        }\n    }\n\n    initValue(member, defValue) {\n        if (!(member in this.value)) {\n            this.value[member] = defValue;\n        }\n        return this.value[member];\n    }\n\n    initArray(member) {\n        return this.initValue(member, []);\n    }\n\n    initObj(member) {\n        return this.initValue(member, {});\n    }\n\n    get owner() {\n        return this._owner;\n    }\n\n    get value() {\n        return this._value;\n    }\n\n    childRemoved(component) { // virtual\n\n    }\n\n    childAdded(component) {\n\n    }\n\n    removeChild(component) {\n        this.childRemoved(component);\n    }\n\n    // TODO: Set owner, remove from previous owner\n    addChild(component) {\n        this.childAdded(component);\n    }\n\n    isEqualValue(value) {\n        return _.isEqual(value, this.value);\n    }\n\n}\n\nclass ScoreComponentList extends ScoreComponent {\n    constructor(owner, value) {\n        super(owner, value || []);\n        this._childList = [];\n        this.constructChildren();\n    }\n\n    constructChildren() {\n        this.value.forEach((i) => this.factory(i));\n    }\n\n    removeChild(component) {\n        const i = this._childList.indexOf(component);\n        if (i >= 0) {\n            this._childList.splice(i, 1);\n            this.childRemoved(component);\n        }\n    }\n\n    // TODO: Set owner, remove from previous owner\n    addChild(component) {\n        this._childList.push(component);\n        this.childAdded(component);\n    }\n\n    childRemoved(component) {\n        const i = this.value.indexOf(component.value);\n        if (i >= 0) {\n            this.value.splice(i, 1);\n        }\n    }\n\n    // Override\n    childAdded(component) {\n        const i = this.value.indexOf(component.value);\n        if (i < 0) {\n            this.value.push(component.value);\n        }\n    }\n\n    get count() {\n        return this._childList.length;\n    }\n\n    get last() {\n        const len = this._childList.length;\n        if (len > 0)\n            return this._childList[len - 1];\n    }\n\n    removeLast() {\n        const item = this.last;\n        if (item) {\n            this.removeChild(item);\n        }\n    }\n\n    * [Symbol.iterator]() {\n        for (const arg of this._childList) {\n            yield arg;\n        }\n    }\n\n    add() {\n        const result = this.factory();\n        return result;\n    }\n\n    factory(value) {\n        // TODO: Raise exception\n        return null;\n    }\n\n    containsValue(value) {\n        for (let i of this) {\n            if (i.isEqualValue(value)) {\n                return true;\n            }\n        }\n    }\n\n    contains(entity) {\n        for (let i of this) {\n            if (i === entity) {\n                return true;\n            }\n        }\n    }\n\n    clear() {\n        while(this.count) {\n            this.removeLast();\n        }\n    }\n\n}\n\nclass SetGame extends ScoreComponent {\n\n    constructor(owner, value) {\n        super(owner, value);\n    }\n\n    // get matchSet() {\n    //     return this.owner.owner;\n    // }\n\n    get winnerId() {\n        return this.value.winner;\n\n    }\n\n    set winnerId(opponentId) {\n        // console.log(`set winner: ${opponentId}`);\n        this.value.winner = opponentId;\n        matchObservable.changeWinner(this);\n    }\n\n    get finished() {\n        return this.winnerId;\n    }\n\n    get inProgress() {\n        return !this.finished;\n    }\n\n    get matchTiebreak() {\n        return this.value.matchTiebreak;\n    }\n\n    set matchTiebreak(value) {\n        this.value.matchTiebreak = value;\n    }\n\n    get setTiebreak() {\n        return this.value.setTiebreak;\n    }\n\n    set setTiebreak(value) {\n        this.value.setTiebreak = value;\n    }\n}\n\nclass SetGames extends ScoreComponentList {\n    factory(value) {\n        return new SetGame(this, value);\n    }\n}\n\nclass MatchSet extends ScoreComponent {\n    constructor(owner, value) {\n        super(owner, value);\n        this._games = new SetGames(this, this.initArray('games'));\n        // TODO: Initialize winner and scores\n        this.initValue('scores', [0, 0]);\n        this.initValue('winner', undefined);\n    }\n\n    // get match() {\n    //     // TODO: Parent vs. owner\n    //     return this.owner.owner;\n    // }\n\n    get games() {\n        return this._games;\n    }\n\n    get winnerId() {\n        return this.value.winner;\n\n    }\n\n    set winnerId(opponentId) {\n        this.value.winner = opponentId;\n        matchObservable.changeWinner(this);\n    }\n\n    get scores() {\n        return this.value.scores;\n    }\n\n    set scores(value) {\n        this.value.scores = value;\n        matchObservable.changeScores(this);\n    }\n\n    get finished() {\n        return this.winnerId;\n    }\n\n    get inProgress() {\n        return !this.finished;\n    }\n}\n\nclass MatchSets extends ScoreComponentList {\n    factory(value) {\n        return new MatchSet(this, value);\n    }\n}\n\nclass Player extends ScoreComponent {\n\n    constructor(owner, value) {\n        super(owner, value || {id: owner.owner._nextId()});\n    }\n\n    get name() {\n        return this.value.name || \"\";\n    }\n\n    set name(value) {\n        this.value.name = value;\n    }\n\n    get id() {\n        return this.value.id;\n    }\n}\n\nclass PlayerList extends ScoreComponentList {\n    factory(value) {\n        return new Player(this, value);\n    }\n\n}\n\nclass Players extends ScoreComponent {\n    constructor(owner, value) {\n        super(owner, value || {lastId: 0});\n        this._list = new PlayerList(this, this.initArray('list'));\n    }\n\n    get list() {\n        return this._list;\n    }\n\n    _nextId() {\n        this.value.lastId = 'lastId' in this.value ? this.value.lastId + 1 : 1;\n        return this.value.lastId;\n    }\n}\n\nclass PlayerRef extends ScoreComponent {\n\n    get id() {\n        return this.value.id;\n    }\n\n    set id(value) {\n        this.value.id = value;\n    }\n}\n\nclass PlayerRefList extends ScoreComponentList {\n    factory(value) {\n        return new PlayerRef(this, value);\n    }\n}\n\nclass PlayerRefs extends ScoreComponent {\n\n    constructor(owner, value, id) {\n        super(owner, value);\n        this._players = new PlayerRefList(this, this.initArray('players'));\n    }\n\n    get players() {\n        return this._players;\n    }\n\n    clear() {\n        this.players.clear();\n    }\n\n}\n\nclass Servers extends PlayerRefs {\n}\n\nclass Opponent extends PlayerRefs {\n\n    constructor(owner, value, id) {\n        super(owner, value);\n        this.value.id = id;\n    }\n\n\n    get id() {\n        return this.value.id;\n    }\n\n}\n\nclass Opponents extends ScoreComponent {\n    constructor(owner, value) {\n        super(owner, value || {});\n        this._first = new Opponent(this, this.initObj('first'), 1);\n        this._second = new Opponent(this, this.initObj('second'), 2);\n    }\n\n    get first() {\n        return this._first;\n    }\n\n    get second() {\n        return this._second;\n    }\n\n    * [Symbol.iterator]() {\n        yield this._first;\n        yield this._second;\n    }\n\n}\n\nclass Match extends ScoreComponent {\n\n    constructor(value) {\n        super(undefined, value);\n        this._sets = new MatchSets(this, this.initArray('sets'));\n        this._players = new Players(this, this.initArray('players'));\n        this._servers = new Servers(this, this.initArray('servers'));\n        this._opponents = new Opponents(this, this.initArray('opponents'));\n        this.initValue('scores', [0, 0]);\n        this.initValue('warmingUp', undefined);\n        this.initValue('winner', undefined);\n    }\n\n    // get singles() {\n    //     return this.players.count === 2;\n    // }\n    //\n    // get doubles() {\n    //     return this.players.count === 4;\n    // }\n\n    get started() {\n        return this.sets.count > 0;\n    }\n\n    get finished() {\n        return this.winnerId;\n    }\n\n    get inProgress() {\n        return this.started && !this.finished;\n    }\n\n    get warmingUp() {\n        return this.value.warmingUp && !this.started;\n    }\n\n    get strategy() {\n        return this._commandStrategy;\n    }\n\n    set warmingUp(value) {\n        this.value.warmingUp = value;\n    }\n\n    get sets() {\n        return this._sets;\n    }\n\n    get players() {\n        return this._players;\n    }\n\n    get servers() {\n        return this._servers;\n    }\n\n    get opponents() {\n        return this._opponents;\n    }\n\n    get winnerId() {\n        return this.value.winner;\n    }\n\n    set winnerId(winner) {\n        this.value.winner = winner;\n        matchObservable.changeWinner(this);\n    }\n\n    get scores() {\n        return this.value.scores;\n    }\n\n    set scores(value) {\n        this.value.scores = value;\n        matchObservable.changeScores(this);\n    }\n}\n\nexport {Match, MatchSet, SetGame}\n"]}